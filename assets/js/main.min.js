const filterMenu=document.getElementById("filter-menu"),number=document.getElementById("Number-filter"),frequency=document.getElementById("Frequency-filter"),category=document.getElementById("Category-filter"),frequencyAsc=(e,t)=>e.dataset.frequency-t.dataset.frequency,frequencyDsc=(e,t)=>t.dataset.frequency-e.dataset.frequency,numberAsc=(e,t)=>e.dataset.value-t.dataset.value,numberDsc=(e,t)=>t.dataset.value-e.dataset.value,categoryAsc=(e,t)=>e.dataset.category.localeCompare(t.dataset.category),categoryDsc=(e,t)=>t.dataset.category.localeCompare(e.dataset.category);let currentOrder,filterOrder=numberAsc;number.addEventListener("click",()=>{currentOrder=setOrder(filterOrder,numberAsc,numberDsc),order()}),frequency.addEventListener("click",()=>{currentOrder=setOrder(filterOrder,frequencyAsc,frequencyDsc),order()}),category.addEventListener("click",()=>{currentOrder=setOrder(filterOrder,categoryAsc,categoryDsc),order()});const setOrder=function(e,t,n){return e===n?t:n},order=function(){filterOrder=currentOrder,[...document.getElementsByClassName("card")].sort(currentOrder).forEach((e,t)=>{e.style.order=t.toString()})};function showFilters(){filterMenu.style.display="flex"===filterMenu.style.display?"none":"flex"}function lazyloadFallback(e){const t=delayedLoadingOnEvents(!1,e);document.addEventListener("scroll",t),window.addEventListener("resize",t),window.addEventListener("orientationchange",t)}function delayedLoadingOnEvents(e,t){const n=function(){!1===e&&(e=!0,setTimeout((function(){t.forEach((function(e){e.getBoundingClientRect().top<=window.innerHeight&&e.getBoundingClientRect().bottom>=0&&"none"!==getComputedStyle(e).display&&(e.src=e.dataset.src,e.srcset=e.dataset.srcset,e.classList.remove("lazy"),0===(t=t.filter((function(t){return t!==e}))).length&&(document.removeEventListener("scroll",n),window.removeEventListener("resize",n),window.removeEventListener("orientationchange",n)))})),e=!1}),200))};return n}document.addEventListener("DOMContentLoaded",(function(){let e=[].slice.call(document.querySelectorAll("img.lazy"));if("IntersectionObserver"in window){let t=new IntersectionObserver((function(e,n){e.forEach((function(e){if(e.isIntersecting){let n=e.target;n.src=n.dataset.src,n.srcset=n.dataset.srcset,n.classList.remove("lazy"),t.unobserve(n)}}))}));e.forEach((function(e){t.observe(e)}))}else lazyloadFallback(e)})),function(){"use strict";document.querySelectorAll(".modal-button").forEach((function(e){e.onclick=function(){console.log("modal");var t=e.getAttribute("data-modal");document.getElementById(t).style.display="block"}})),document.querySelectorAll(".close").forEach((function(e){e.onclick=function(){console.log("close"),function(e,t){for(var n,r=(e.document||e.ownerDocument).querySelectorAll(t);e;){for(n=r.length-1;n>=0;){if(r.item(n)===e)return e;n-=1}e=e.parentElement}return e}(e,".modal").style.display="none"}})),window.onclick=function(e){"modal"===e.target.className&&(console.log("other"),e.target.style.display="none")}}();